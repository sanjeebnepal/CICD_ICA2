name: CI with Docker & Self-Hosted Runners

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-push-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      - name: Build the Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/custom-python-image-ica2:latest .

      - name: Push the Docker image
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/custom-python-image-ica2:latest

  test-on-linux:
    name: Unit Tests on Linux Self-Hosted Runner
    runs-on: [self-hosted, linux]
    needs: build-and-push-image

    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip --break-system-packages
          pip install -r requirements.txt --break-system-packages

      - name: Run unit tests
        run: |
          mkdir -p test-reports
          pytest tests/test_unit.py --junitxml=test-reports/results.xml

      - uses: actions/upload-artifact@v4
        with:
          name: unit-test-results-linux
          path: test-reports/results.xml

  test-on-windows:
    name: Unit Tests on Windows Self-Hosted Runner
    runs-on: [self-hosted, windows]
    needs: build-and-push-image

    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests
        run: |
          mkdir test-reports
          pytest tests/test_unit.py --junitxml=test-reports/results.xml

      - uses: actions/upload-artifact@v4
        with:
          name: unit-test-results-windows
          path: test-reports/results.xml

  integration-tests:
    name: Integration Tests with Service Container
    runs-on: ubuntu-latest
    needs: build-and-push-image

    services:
      app:
        image: ghcr.io/${{ github.repository_owner }}/custom-python-image-ica2:latest
        ports:
          - 8000:8080

    steps:
      - uses: actions/checkout@v3

      - name: Wait for app to be healthy
        run: |
          for i in {1..10}; do
            if curl -f http://localhost:8000/health; then
              echo "App is healthy!"
              exit 0
            else
              echo "Waiting for app to be ready..."
              sleep 5
            fi
          done
          echo "App failed to become healthy."
          exit 1

      - name: Run integration tests
        run: |
          mkdir -p test-reports
          pytest tests/integration --junitxml=test-reports/results.xml

      - uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: test-reports/results.xml
